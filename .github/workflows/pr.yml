name: Pull Request Build
on:
  pull_request:

jobs:
  check-format:
    runs-on: ubuntu-latest
    name: Check format
    steps:
      - uses: actions/checkout@v3
      - name: Check format
        run: cargo fmt --check
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build
  tests:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - uses: actions/checkout@v3
      - name: Unit tests
        run: cargo test
        
  # Extracted from https://github.com/foundry-rs/foundry/blob/master/.github/workflows/release.yml
  release:
    strategy:
        matrix:
            job:
                - os: macos-latest
                  platform: darwin
                  target: x86_64-apple-darwin
                  arch: amd64
                  svm_target_platform: macosx-amd64
                - os: macos-latest
                  platform: darwin
                  target: aarch64-apple-darwin
                  arch: arm64
                  svm_target_platform: macosx-aarch64
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.job.target }}
            # - name: Apple M1 setup
            #   if: ${{ matrix.job.target == 'aarch64-apple-darwin' }}
            #   run: |
            #     echo "SDKROOT=$(xcrun -sdk macosx --show-sdk-path)" >> $GITHUB_ENV
            #     echo "MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx --show-sdk-platform-version)" >> $GITHUB_ENV
            - name: Build binaries
              env:
                SVM_TARGET_PLATFORM: ${{ matrix.job.svm_target_platform }}
              run: cargo build --release --target ${{ matrix.job.target }}
            - name: Archive binaries
              id: artifacts
              env:
                  PLATFORM_NAME: ${{ matrix.job.platform }}
                  TARGET: ${{ matrix.job.target }}
                  ARCH: ${{ matrix.job.arch }}
                  VERSION_NAME: ${GITHUB_REF_NAME}
              shell: bash
              run: |
                  if [ "$PLATFORM_NAME" == "linux" ]; then
                    tar -czvf "ducketh_${VERSION_NAME}_${PLATFORM_NAME}_${ARCH}.tar.gz" -C ./target/${TARGET}/release ducketh
                    echo "file_name=ducketh_${VERSION_NAME}_${PLATFORM_NAME}_${ARCH}.tar.gz" >> $GITHUB_OUTPUT
                  elif [ "$PLATFORM_NAME" == "darwin" ]; then
                    # We need to use gtar here otherwise the archive is corrupt.
                    # See: https://github.com/actions/virtual-environments/issues/2619
                    gtar -czvf "ducketh_${VERSION_NAME}_${PLATFORM_NAME}_${ARCH}.tar.gz" -C ./target/${TARGET}/release ducketh
                    echo "file_name=ducketh_${VERSION_NAME}_${PLATFORM_NAME}_${ARCH}.tar.gz" >> $GITHUB_OUTPUT
                  else
                    cd ./target/${TARGET}/release
                    7z a -tzip "ducketh_${VERSION_NAME}_${PLATFORM_NAME}_${ARCH}.zip" ducketh.exe
                    mv "ducketh_${VERSION_NAME}_${PLATFORM_NAME}_${ARCH}.zip" ../../../
                    echo "file_name=ducketh_${VERSION_NAME}_${PLATFORM_NAME}_${ARCH}.zip" >> $GITHUB_OUTPUT
                  fi
